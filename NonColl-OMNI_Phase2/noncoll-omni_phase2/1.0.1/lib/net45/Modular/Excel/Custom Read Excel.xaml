<Activity mc:Ignorable="sap sap2010" x:Class="Custom_Read_Excel" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_fileExcel" Type="InArgument(x:String)" />
    <x:Property Name="out_dtFiltered" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="in_Range" Type="InArgument(x:String)" />
    <x:Property Name="in_Sheet" Type="InArgument(x:String)" />
    <x:Property Name="in_StartKeyword" Type="InArgument(x:String)" />
    <x:Property Name="in_EndKeyword" Type="InArgument(x:String)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>971.2,1830.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="29">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="35">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.FTP.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="981.6,1765.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_37" InstanceCachePeriod="3000" ReadOnly="True" WorkbookPath="[in_fileExcel]">
    <ui:ExcelApplicationScope.Body>
      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
        <ActivityAction.Argument>
          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
        </ActivityAction.Argument>
        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="948,1656" sap2010:WorkflowViewState.IdRef="Sequence_659">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Int32" Name="startTableIndex" />
            <Variable x:TypeArguments="x:Int32" Name="endTableIndex" />
            <Variable x:TypeArguments="sd:DataTable" Name="dtSourceMapping" />
            <Variable x:TypeArguments="x:Int32" Name="index" />
            <Variable x:TypeArguments="x:String" Name="sheet" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ExcelReadRange AddHeaders="True" DataTable="[dtSourceMapping]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="906.4,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_55" SheetName="[in_Sheet.ToString]">
            <ui:ExcelReadRange.Range>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:ExcelReadRange.Range>
          </ui:ExcelReadRange>
          <Assign DisplayName="StartTableIndex" sap:VirtualizedContainerService.HintSize="906.4,60" sap2010:WorkflowViewState.IdRef="Assign_481">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[StartTableIndex]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">0</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="EndTableIndex" sap:VirtualizedContainerService.HintSize="906.4,60" sap2010:WorkflowViewState.IdRef="Assign_482">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[EndTableIndex]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">0</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="[index]" DataTable="[dtSourceMapping]" DisplayName="For Each Row Source" sap:VirtualizedContainerService.HintSize="906.4,984" sap2010:WorkflowViewState.IdRef="ForEachRow_45">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="872.8,863.2" sap2010:WorkflowViewState.IdRef="Sequence_658">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[Row(0).ToString().Equals(in_StartKeyword.ToString) AndAlso StartTableIndex = 0]" DisplayName="Check Start Table Index" sap:VirtualizedContainerService.HintSize="831.2,239.2" sap2010:WorkflowViewState.IdRef="If_77">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Assign DisplayName="Start Data" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_483">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[startTableIndex]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[index+2]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                  <If Condition="[Row(0).ToString().Equals(in_EndKeyword.ToString) AndAlso StartTableIndex &gt; 0]" DisplayName="Check End Table Index" sap:VirtualizedContainerService.HintSize="831.2,491.2" sap2010:WorkflowViewState.IdRef="If_78">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Assign DisplayName="End Data" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_484">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[endTableIndex]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[If(String.IsNullOrEmpty(in_EndKeyword), index + 1, index + 1)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="524.8,332" sap2010:WorkflowViewState.IdRef="Sequence_660">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[String.IsNullOrEmpty(in_EndKeyword)]" sap:VirtualizedContainerService.HintSize="483.2,239.2" sap2010:WorkflowViewState.IdRef="If_80">
                          <If.Then>
                            <Assign DisplayName="End Data" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_485">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[endTableIndex]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[index + 2]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                        </If>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <If Condition="[StartTableIndex &gt; 0 AndAlso EndTableIndex &gt; 0]" DisplayName="Read Range Filter" sap:VirtualizedContainerService.HintSize="906.4,239.2" sap2010:WorkflowViewState.IdRef="If_79">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[out_dtFiltered]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_56" Range="[in_Range.ToString.Split(&quot;:&quot;c).First &amp; StartTableIndex &amp; &quot;:&quot; &amp; in_Range.ToString.Split(&quot;:&quot;c).Last &amp; EndTableIndex]" SheetName="[in_Sheet.ToString]" />
            </If.Then>
          </If>
        </Sequence>
      </ActivityAction>
    </ui:ExcelApplicationScope.Body>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
  </ui:ExcelApplicationScope>
</Activity>