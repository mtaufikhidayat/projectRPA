<Activity mc:Ignorable="sap sap2010" x:Class="Save_File" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_processName" Type="InArgument(x:String)" />
    <x:Property Name="in_cabangNPWP6Digit" Type="InArgument(x:String)" />
    <x:Property Name="in_path" Type="InArgument(x:String)" />
    <x:Property Name="out_fileDownloaded" Type="OutArgument(x:String)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>785,2546</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="29">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="35">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.runTime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Save File" sap:VirtualizedContainerService.HintSize="795,2481" sap2010:WorkflowViewState.IdRef="Sequence_3885">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="tempFileName" />
      <Variable x:TypeArguments="x:String" Name="checkPath" />
      <Variable x:TypeArguments="x:Boolean" Name="isSaveExist" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:UiElementExists DisplayName="Element Exists 'Save'" Exists="[isSaveExist]" sap:VirtualizedContainerService.HintSize="753,68" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
      <ui:UiElementExists.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d64e6265-49de-42d3-9bbe-057588562968" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Save As' /&gt;" TimeoutMS="[Cint(TimeSpan.FromMinutes(5).TotalMilliseconds)]">
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:UiElementExists.Target>
    </ui:UiElementExists>
    <If Condition="[isSaveExist]" DisplayName="Check Element Exist" sap:VirtualizedContainerService.HintSize="753,2281" sap2010:WorkflowViewState.IdRef="If_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Download File" sap:VirtualizedContainerService.HintSize="717,2091" sap2010:WorkflowViewState.IdRef="Sequence_3898">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'File Name'" sap:VirtualizedContainerService.HintSize="675,106" sap2010:WorkflowViewState.IdRef="GetValue_197">
            <ui:GetValue.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="15ce474f-a0be-45a4-a600-d7da636d61f0" InformativeScreenshot="3421581a142beb239def935e69303e91" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Save As' /&gt;&lt;wnd aaname='Explorer Pane' cls='DirectUIHWND' /&gt;&lt;wnd aaname='File name:' cls='ComboBox' /&gt;&lt;wnd ctrlid='1001' /&gt;" TimeoutMS="5000">
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:GetValue.Target>
            <ui:GetValue.Value>
              <OutArgument x:TypeArguments="x:String">[tempFileName]</OutArgument>
            </ui:GetValue.Value>
          </ui:GetValue>
          <Sequence DisplayName="Set Path Download" sap:VirtualizedContainerService.HintSize="675,916" sap2010:WorkflowViewState.IdRef="Sequence_3893">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[in_processName.Equals(&quot;ZIP&quot;)]" DisplayName="Check processName" sap:VirtualizedContainerService.HintSize="633,432" sap2010:WorkflowViewState.IdRef="If_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="326,272" sap2010:WorkflowViewState.IdRef="Sequence_3892">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="fileDownloaded" sap:VirtualizedContainerService.HintSize="284,60" sap2010:WorkflowViewState.IdRef="Assign_3584">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_fileDownloaded]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Path.Combine(in_path,in_processName+"."+Path.GetFileName(tempFileName).Split("."c).Last)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:Delete ContinueOnError="True" sap:VirtualizedContainerService.HintSize="284,80" sap2010:WorkflowViewState.IdRef="Delete_2" Path="[out_fileDownloaded]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Assign DisplayName="fileDownloaded" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3585">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[out_fileDownloaded]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Path.Combine(in_path,in_cabangNPWP6Digit.Split(" "c).First+"_"+in_processName+".pdf")]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
            <ui:SetToClipboard DisplayName="Set To Clipboard" sap:VirtualizedContainerService.HintSize="633,59" sap2010:WorkflowViewState.IdRef="SetToClipboard_49" Text="[out_fileDownloaded]" />
            <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" AlterIfDisabled="False" ClickBeforeTyping="False" DeselectAfter="True" DisplayName="Type Into 'Directory'" EmptyField="True" sap:VirtualizedContainerService.HintSize="633,96" sap2010:WorkflowViewState.IdRef="TypeInto_604">
              <ui:TypeInto.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ae0afab4-58ce-4b70-9c15-dbb9d2819606" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Save As' /&gt;&lt;wnd aaname='File name:' cls='ComboBox' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:TypeInto.Target>
              <ui:TypeInto.Text>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:TypeInto.Text>
            </ui:TypeInto>
            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="633,117" sap2010:WorkflowViewState.IdRef="SendHotkey_56" Key="v" KeyModifiers="Ctrl">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="73ef9405-c07e-457b-9fdf-2d6dc15b0b4b" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Save As' /&gt;&lt;wnd aaname='File name:' cls='ComboBox' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
          </Sequence>
          <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DelayMS="3000" DisplayName="Click 'Save'" sap:VirtualizedContainerService.HintSize="675,68" sap2010:WorkflowViewState.IdRef="Click_1613" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
            <ui:Click.CursorPosition>
              <ui:CursorPosition Position="Center">
                <ui:CursorPosition.OffsetX>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetX>
                <ui:CursorPosition.OffsetY>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetY>
              </ui:CursorPosition>
            </ui:Click.CursorPosition>
            <ui:Click.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="101fc972-a5c8-43af-908b-f43a4bd0a4c4" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Save As' /&gt;&lt;ctrl name='Save' role='push button' /&gt;">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:Click.Target>
          </ui:Click>
          <Sequence DisplayName="Check Download File" sap:VirtualizedContainerService.HintSize="675,789" sap2010:WorkflowViewState.IdRef="Sequence_3896">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:DateTime" Name="startTime" />
              <Variable x:TypeArguments="s:DateTime" Name="endTime" />
              <Variable x:TypeArguments="x:String" Name="checkText" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="436,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,322" sap2010:WorkflowViewState.IdRef="CommentOut_1">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="304,244" sap2010:WorkflowViewState.IdRef="Sequence_3899">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Start Time" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3577">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:DateTime">[startTime]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:DateTime">[Now]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InterruptibleDoWhile Condition="[Not File.Exists(out_fileDownloaded) and (Not (endTime-startTime).TotalMinutes&gt;20)]" DisplayName="Do While Check File Downloaded" sap:VirtualizedContainerService.HintSize="262,52" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_119">
                    <ui:InterruptibleDoWhile.Body>
                      <Assign DisplayName="endTime" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3578">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:DateTime">[endTime]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:DateTime">[Now]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </ui:InterruptibleDoWhile.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InterruptibleDoWhile>
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
            <ui:InterruptibleDoWhile DisplayName="Do While Check File Downloaded" sap:VirtualizedContainerService.HintSize="436,273" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_120">
              <ui:InterruptibleDoWhile.Body>
                <ui:GetFullText IgnoreHidden="{x:Null}" ContinueOnError="True" DisplayName="Get Full Text 'Downloads bar'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetFullText_1">
                  <ui:GetFullText.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="aa17b80e-9510-4c4d-9e44-ad11337390c9" InformativeScreenshot="e9982a04c029ed224a998b1644d92c2b" Selector="&lt;wnd app='chrome.exe' cls='Chrome_WidgetWin_1' title='*Google Chrome' /&gt;&lt;ctrl name='*Google Chrome' role='pane' /&gt;&lt;ctrl name='Downloads bar' role='grouping' /&gt;" TimeoutMS="1000">
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:GetFullText.Target>
                  <ui:GetFullText.Text>
                    <OutArgument x:TypeArguments="x:String">[checkText]</OutArgument>
                  </ui:GetFullText.Text>
                </ui:GetFullText>
              </ui:InterruptibleDoWhile.Body>
              <ui:InterruptibleDoWhile.Condition>
                <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="checkText.Contains(&quot;left&quot;) And (Not File.Exists(out_fileDownloaded))" />
              </ui:InterruptibleDoWhile.Condition>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InterruptibleDoWhile>
          </Sequence>
        </Sequence>
      </If.Then>
    </If>
  </Sequence>
</Activity>